% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simpg.R
\name{simpg}
\alias{simpg}
\title{Simulate a bacterial pangenome}
\usage{
simpg(ref = "pan_genome_reference.fa", norg = 10, ngenes = 100,
  ne = 5e+07, theta = 2e-06, rho = 1e-06, mu = 5e-10,
  dir_out = "sim_pg", smat)
}
\arguments{
\item{ref}{A multi-fasta file from where to sample genes.}

\item{norg}{The number of organisms sampled.}

\item{ngenes}{The number of genes the MRCA will have.}

\item{ne}{Effective population number. For E coli is ~25 million
(Charlesworth et al., 2009). This is also the number of generations.}

\item{theta}{Gene gain rate per generation.}

\item{rho}{Gene loss rate per generation.}

\item{mu}{The per site per generation substitution rate.}

\item{dir_out}{The non-existent directory where to put the simulated
orthologous groups.}

\item{smat}{A codon substitution matrix with probability weights for
transition. It must be a \code{data.frame} with \code{dim(smat) == c(64, 64)}, where
column and row names are the possible combination of codons (i.e. "aaa",
"taa", "caa", etc). The values in the \code{data.frame} correspond to probability
weights for obtaining the elements of the vector being sampled. See
\link[base]{sample} for more information. The default is a transition matrix
with 0 probability of transition from a coding codon to any stop codon and to
itself, and equal probability weights of transition to any other codon which
differ in, at most, one base (point mutations; one site per codon at most is
mutated each time). If you want to use a different codon matrix, I recommend
to use the default as reference: \code{pansimulatoR:::.codon.subst.mat} .
See package source (R/subs_mat.R) for a guide on how to generate a similar
matrix.}
}
\value{
A \code{list} of length 4. (1) The coalescent phylogenetic tree, (2)
a \code{data.frame} with the gene gain-loss events, (3) a \code{data.frame}
with the substitution events, and (4) the panmatrix. Also a series of
attributes are returned.
}
\description{
Simulate the evolution of a pangenome using a random coalescent
tree as guide, according to the neutral model and the Infinite Many Genes
(IMG) model.
The algorithm first simulates a random coalescent tree (\link[ape]{rcoal}).

Then, random deviates from the expected number of gene gain and loss
according to branch length and parameters (\code{theta} and \code{rho}), are
used to simulate gene birth and death along the tree. Since the IMG model is
used, genes are only transmited vertically from generation to generation.

Point mutations are simulated following a similar process as the above:
random deviates from the expected number of mutations according to branch
length and mutation rate, are used. Mutations are then distributed along
sites with uniform probability. By default stop codons are avoided. (note:
actually, codons and not sites are conditioned to mutation. See \code{smat}
parameter below).

Finally, sequences are sampled from \code{ref} and a pangenome is generated
following the evolutionary history simulated above.
}
\author{
Ignacio Ferres
 @export
On this step, gene birth and death is simulated in order to obtain a
panmatrix at the end of this stage (IMG model).
norg : number of organisms to sample.
ngenes : number of *starting* genes at the MRCA.
phy : simulated coalescent tree.
theta : gene gain rate per generation.
rho : gene loss rate per generation.
On this step, mutation is simulated according the neutral model. The
output is a set of sequences evolved from a common ancestor for ne
generations at a given substitution rate. Mutations generated avoid stop
codons.
mu : substitution rate per site per generation.
Takes the mut data.frame and applies substitutions cronologically to each
gene. Then removes sequences according the final panmatrix.
Return a list with a coalescent tree, a data.frame representing the
gain-loss events, another one representing mutation events, and the final
panmatrix. Also some attributes regarding input parameters are returned.
}
